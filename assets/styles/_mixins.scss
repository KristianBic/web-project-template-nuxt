// Responsive Mixin with More Flexible Breakpoints
@mixin responsive($breakpoint, $height: 0) {
  $breakpoints: (
    "mobile": 600px,
    "smallerMobile": 360px,
    "tablet": 768px,
    "biggerTablet": 900px,
    "smallerDesktop": 1500px,
    "desktop": 1920px,
    "largeDesktop": 2560px,
  );

  $width: map-get($breakpoints, $breakpoint);

  @if $width {
    @if $height == 0 {
      @media only screen and (max-width: #{$width}) {
        @content;
      }
    } @else {
      @media screen and (max-width: #{$width}) and (max-height: #{$height}) {
        @content;
      }
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found in $breakpoints map.";
  }
}

// Enhanced Flex Mixin with Optional Parameters
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Improved Version Mixin with More Flexibility
@mixin version_toggle($mobile-breakpoint: 767px, $pc-class: ".version_pc", $mobile-class: ".version_mobile") {
  #{$pc-class} {
    display: block;
  }

  #{$mobile-class} {
    display: none;
  }

  @media (max-width: #{$mobile-breakpoint}) {
    #{$pc-class} {
      display: none !important;
    }

    #{$mobile-class} {
      display: block !important;
    }
  }
}

// Additional Mixins

// Responsive Typography
@mixin responsive-font($min-size, $max-size, $min-width: 320px, $max-width: 1920px) {
  font-size: $min-size;

  @media screen and (min-width: #{$min-width}) and (max-width: #{$max-width}) {
    font-size: calc(
      #{$min-size} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}) / (#{$max-width} - #{$min-width}))
    );
  }

  @media screen and (min-width: #{$max-width}) {
    font-size: $max-size;
  }
}

// Hover and Active States
@mixin hover-active {
  &:hover,
  &:active {
    @content;
  }
}

// Accessibility Focus State
@mixin focus-state {
  &:focus {
    outline: 1px solid currentColor;
    outline-offset: 1px;
  }
}

// Truncate Text
@mixin truncate-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
